{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\nvar Source = require(\"./Source\");\nvar SPLIT_REGEX = /(?!$)[^\\n\\r;{}]*[\\n\\r;{}]*/g;\nfunction _splitCode(code) {\n  return code.match(SPLIT_REGEX) || [];\n}\nclass OriginalSource extends Source {\n  constructor(value, name) {\n    super();\n    this._value = value;\n    this._name = name;\n  }\n  source() {\n    return this._value;\n  }\n  node(options) {\n    options = options || {};\n    var sourceMap = this._sourceMap;\n    var value = this._value;\n    var name = this._name;\n    var lines = value.split(\"\\n\");\n    var node = new SourceNode(null, null, null, lines.map(function (line, idx) {\n      var pos = 0;\n      if (options.columns === false) {\n        var content = line + (idx != lines.length - 1 ? \"\\n\" : \"\");\n        return new SourceNode(idx + 1, 0, name, content);\n      }\n      return new SourceNode(null, null, null, _splitCode(line + (idx != lines.length - 1 ? \"\\n\" : \"\")).map(function (item) {\n        if (/^\\s*$/.test(item)) {\n          pos += item.length;\n          return item;\n        }\n        var res = new SourceNode(idx + 1, pos, name, item);\n        pos += item.length;\n        return res;\n      }));\n    }));\n    node.setSourceContent(name, value);\n    return node;\n  }\n  listMap(options) {\n    return new SourceListMap(this._value, this._name, this._value);\n  }\n  updateHash(hash) {\n    hash.update(this._value);\n  }\n}\nrequire(\"./SourceAndMapMixin\")(OriginalSource.prototype);\nmodule.exports = OriginalSource;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}