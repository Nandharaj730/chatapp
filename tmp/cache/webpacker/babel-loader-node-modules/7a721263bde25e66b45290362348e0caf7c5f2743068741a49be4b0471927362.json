{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireIncludeDependency = require(\"./RequireIncludeDependency\");\nconst RequireIncludeDependencyParserPlugin = require(\"./RequireIncludeDependencyParserPlugin\");\nconst ParserHelpers = require(\"../ParserHelpers\");\nclass RequireIncludePlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"RequireIncludePlugin\", (compilation, _ref) => {\n      let normalModuleFactory = _ref.normalModuleFactory;\n      compilation.dependencyFactories.set(RequireIncludeDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(RequireIncludeDependency, new RequireIncludeDependency.Template());\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.requireInclude !== undefined && !parserOptions.requireInclude) return;\n        new RequireIncludeDependencyParserPlugin().apply(parser);\n        parser.hooks.evaluateTypeof.for(\"require.include\").tap(\"RequireIncludePlugin\", ParserHelpers.evaluateToString(\"function\"));\n        parser.hooks.typeof.for(\"require.include\").tap(\"RequireIncludePlugin\", ParserHelpers.toConstantDependency(parser, JSON.stringify(\"function\")));\n      };\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"RequireIncludePlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"RequireIncludePlugin\", handler);\n    });\n  }\n}\nmodule.exports = RequireIncludePlugin;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}