{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst Template = require(\"../Template\");\nclass RequireIncludeDependency extends ModuleDependency {\n  constructor(request, range) {\n    super(request);\n    this.range = range;\n  }\n  getReference() {\n    if (!this.module) return null;\n    // This doesn't use any export\n    return new DependencyReference(this.module, [], false);\n  }\n  get type() {\n    return \"require.include\";\n  }\n}\nRequireIncludeDependency.Template = class RequireIncludeDependencyTemplate {\n  apply(dep, source, runtime) {\n    const comment = runtime.outputOptions.pathinfo ? Template.toComment(`require.include ${runtime.requestShortener.shorten(dep.request)}`) : \"\";\n    source.replace(dep.range[0], dep.range[1] - 1, `undefined${comment}`);\n  }\n};\nmodule.exports = RequireIncludeDependency;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}