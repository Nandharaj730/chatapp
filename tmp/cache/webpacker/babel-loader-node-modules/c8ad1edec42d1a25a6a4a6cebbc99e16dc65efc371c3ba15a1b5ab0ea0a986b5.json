{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\nclass SyncBailHookCodeFactory extends HookCodeFactory {\n  content(_ref) {\n    let onError = _ref.onError,\n      onResult = _ref.onResult,\n      resultReturns = _ref.resultReturns,\n      onDone = _ref.onDone,\n      rethrowIfPossible = _ref.rethrowIfPossible;\n    return this.callTapsSeries({\n      onError: (i, err) => onError(err),\n      onResult: (i, result, next) => `if(${result} !== undefined) {\\n${onResult(result)};\\n} else {\\n${next()}}\\n`,\n      resultReturns,\n      onDone,\n      rethrowIfPossible\n    });\n  }\n}\nconst factory = new SyncBailHookCodeFactory();\nclass SyncBailHook extends Hook {\n  tapAsync() {\n    throw new Error(\"tapAsync is not supported on a SyncBailHook\");\n  }\n  tapPromise() {\n    throw new Error(\"tapPromise is not supported on a SyncBailHook\");\n  }\n  compile(options) {\n    factory.setup(this, options);\n    return factory.create(options);\n  }\n}\nmodule.exports = SyncBailHook;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}