{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\nmodule.exports = class HarmonyExportDependencyParserPlugin {\n  constructor(moduleOptions) {\n    this.strictExportPresence = moduleOptions.strictExportPresence;\n  }\n  apply(parser) {\n    parser.hooks.export.tap(\"HarmonyExportDependencyParserPlugin\", statement => {\n      const dep = new HarmonyExportHeaderDependency(statement.declaration && statement.declaration.range, statement.range);\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = -1;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n    parser.hooks.exportImport.tap(\"HarmonyExportDependencyParserPlugin\", (statement, source) => {\n      parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n      const clearDep = new ConstDependency(\"\", statement.range);\n      clearDep.loc = Object.create(statement.loc);\n      clearDep.loc.index = -1;\n      parser.state.current.addDependency(clearDep);\n      const sideEffectDep = new HarmonyImportSideEffectDependency(source, parser.state.module, parser.state.lastHarmonyImportOrder, parser.state.harmonyParserScope);\n      sideEffectDep.loc = Object.create(statement.loc);\n      sideEffectDep.loc.index = -1;\n      parser.state.current.addDependency(sideEffectDep);\n      return true;\n    });\n    parser.hooks.exportExpression.tap(\"HarmonyExportDependencyParserPlugin\", (statement, expr) => {\n      const comments = parser.getComments([statement.range[0], expr.range[0]]);\n      const dep = new HarmonyExportExpressionDependency(parser.state.module, expr.range, statement.range, comments.map(c => {\n        switch (c.type) {\n          case \"Block\":\n            return `/*${c.value}*/`;\n          case \"Line\":\n            return `//${c.value}\\n`;\n        }\n        return \"\";\n      }).join(\"\"));\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = -1;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n    parser.hooks.exportDeclaration.tap(\"HarmonyExportDependencyParserPlugin\", statement => {});\n    parser.hooks.exportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", (statement, id, name, idx) => {\n      const rename = parser.scope.renames.get(id);\n      let dep;\n      const harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n      harmonyNamedExports.add(name);\n      if (rename === \"imported var\") {\n        const settings = parser.state.harmonySpecifier.get(id);\n        dep = new HarmonyExportImportedSpecifierDependency(settings.source, parser.state.module, settings.sourceOrder, parser.state.harmonyParserScope, settings.id, name, harmonyNamedExports, null, this.strictExportPresence);\n      } else {\n        dep = new HarmonyExportSpecifierDependency(parser.state.module, id, name);\n      }\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = idx;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n    parser.hooks.exportImportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", (statement, source, id, name, idx) => {\n      const harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n      let harmonyStarExports = null;\n      if (name) {\n        harmonyNamedExports.add(name);\n      } else {\n        harmonyStarExports = parser.state.harmonyStarExports = parser.state.harmonyStarExports || [];\n      }\n      const dep = new HarmonyExportImportedSpecifierDependency(source, parser.state.module, parser.state.lastHarmonyImportOrder, parser.state.harmonyParserScope, id, name, harmonyNamedExports, harmonyStarExports && harmonyStarExports.slice(), this.strictExportPresence);\n      if (harmonyStarExports) {\n        harmonyStarExports.push(dep);\n      }\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = idx;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}