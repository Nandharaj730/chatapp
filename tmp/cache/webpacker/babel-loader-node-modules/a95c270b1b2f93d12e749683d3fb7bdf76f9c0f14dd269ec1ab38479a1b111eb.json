{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst NullDependency = require(\"./NullDependency\");\nclass HarmonyInitDependency extends NullDependency {\n  constructor(originModule) {\n    super();\n    this.originModule = originModule;\n  }\n  get type() {\n    return \"harmony init\";\n  }\n}\nmodule.exports = HarmonyInitDependency;\nHarmonyInitDependency.Template = class HarmonyInitDependencyTemplate {\n  apply(dep, source, runtime, dependencyTemplates) {\n    const module = dep.originModule;\n    const list = [];\n    for (const dependency of module.dependencies) {\n      const template = dependencyTemplates.get(dependency.constructor);\n      if (template && typeof template.harmonyInit === \"function\" && typeof template.getHarmonyInitOrder === \"function\") {\n        const order = template.getHarmonyInitOrder(dependency);\n        if (!isNaN(order)) {\n          list.push({\n            order,\n            listOrder: list.length,\n            dependency,\n            template\n          });\n        }\n      }\n    }\n    list.sort((a, b) => {\n      const x = a.order - b.order;\n      if (x) return x;\n      return a.listOrder - b.listOrder;\n    });\n    for (const item of list) {\n      item.template.harmonyInit(item.dependency, source, runtime, dependencyTemplates);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}