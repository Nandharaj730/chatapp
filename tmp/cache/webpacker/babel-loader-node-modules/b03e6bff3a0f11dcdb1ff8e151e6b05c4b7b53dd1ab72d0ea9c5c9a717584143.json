{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst _require = require(\"webpack-sources\"),\n  ConcatSource = _require.ConcatSource;\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n  return accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\nclass ExportPropertyMainTemplatePlugin {\n  /**\n   * @param {string|string[]} property the name of the property to export\n   */\n  constructor(property) {\n    this.property = property;\n  }\n\n  /**\n   * @param {Compilation} compilation the compilation instance\n   * @returns {void}\n   */\n  apply(compilation) {\n    const mainTemplate = compilation.mainTemplate,\n      chunkTemplate = compilation.chunkTemplate;\n    const onRenderWithEntry = (source, chunk, hash) => {\n      const postfix = `${accessorToObjectAccess([].concat(this.property))}`;\n      return new ConcatSource(source, postfix);\n    };\n    for (const template of [mainTemplate, chunkTemplate]) {\n      template.hooks.renderWithEntry.tap(\"ExportPropertyMainTemplatePlugin\", onRenderWithEntry);\n    }\n    mainTemplate.hooks.hash.tap(\"ExportPropertyMainTemplatePlugin\", hash => {\n      hash.update(\"export property\");\n      hash.update(`${this.property}`);\n    });\n  }\n}\nmodule.exports = ExportPropertyMainTemplatePlugin;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}