{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\nconst ModuleDependency = require(\"./ModuleDependency\");\nconst UnsupportedWebAssemblyFeatureError = require(\"../wasm/UnsupportedWebAssemblyFeatureError\");\n\n/** @typedef {import(\"@webassemblyjs/ast\").ModuleImportDescription} ModuleImportDescription */\n\nclass WebAssemblyImportDependency extends ModuleDependency {\n  /**\n   * @param {string} request the request\n   * @param {string} name the imported name\n   * @param {ModuleImportDescription} description the WASM ast node\n   * @param {false | string} onlyDirectImport if only direct imports are allowed\n   */\n  constructor(request, name, description, onlyDirectImport) {\n    super(request);\n    /** @type {string} */\n    this.name = name;\n    /** @type {ModuleImportDescription} */\n    this.description = description;\n    /** @type {false | string} */\n    this.onlyDirectImport = onlyDirectImport;\n  }\n  getReference() {\n    if (!this.module) return null;\n    return new DependencyReference(this.module, [this.name], false);\n  }\n  getErrors() {\n    if (this.onlyDirectImport && this.module && !this.module.type.startsWith(\"webassembly\")) {\n      return [new UnsupportedWebAssemblyFeatureError(`Import \"${this.name}\" from \"${this.request}\" with ${this.onlyDirectImport} can only be used for direct wasm to wasm dependencies`)];\n    }\n  }\n  get type() {\n    return \"wasm import\";\n  }\n}\nmodule.exports = WebAssemblyImportDependency;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}