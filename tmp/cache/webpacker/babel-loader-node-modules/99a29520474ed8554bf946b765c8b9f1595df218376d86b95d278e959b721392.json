{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst _require = require(\"webpack-sources\"),\n  ConcatSource = _require.ConcatSource;\n\n/** @typedef {import(\"../ChunkTemplate\")} ChunkTemplate */\n\nconst getEntryInfo = chunk => {\n  return [chunk.entryModule].filter(Boolean).map(m => [m.id].concat(Array.from(chunk.groupsIterable)[0].chunks.filter(c => c !== chunk).map(c => c.id)));\n};\nclass JsonpChunkTemplatePlugin {\n  /**\n   * @param {ChunkTemplate} chunkTemplate the chunk template\n   * @returns {void}\n   */\n  apply(chunkTemplate) {\n    chunkTemplate.hooks.render.tap(\"JsonpChunkTemplatePlugin\", (modules, chunk) => {\n      const jsonpFunction = chunkTemplate.outputOptions.jsonpFunction;\n      const globalObject = chunkTemplate.outputOptions.globalObject;\n      const source = new ConcatSource();\n      const prefetchChunks = chunk.getChildIdsByOrders().prefetch;\n      source.add(`(${globalObject}[${JSON.stringify(jsonpFunction)}] = ${globalObject}[${JSON.stringify(jsonpFunction)}] || []).push([${JSON.stringify(chunk.ids)},`);\n      source.add(modules);\n      const entries = getEntryInfo(chunk);\n      if (entries.length > 0) {\n        source.add(`,${JSON.stringify(entries)}`);\n      } else if (prefetchChunks && prefetchChunks.length) {\n        source.add(`,0`);\n      }\n      if (prefetchChunks && prefetchChunks.length) {\n        source.add(`,${JSON.stringify(prefetchChunks)}`);\n      }\n      source.add(\"])\");\n      return source;\n    });\n    chunkTemplate.hooks.hash.tap(\"JsonpChunkTemplatePlugin\", hash => {\n      hash.update(\"JsonpChunkTemplatePlugin\");\n      hash.update(\"4\");\n      hash.update(`${chunkTemplate.outputOptions.jsonpFunction}`);\n      hash.update(`${chunkTemplate.outputOptions.globalObject}`);\n    });\n    chunkTemplate.hooks.hashForChunk.tap(\"JsonpChunkTemplatePlugin\", (hash, chunk) => {\n      hash.update(JSON.stringify(getEntryInfo(chunk)));\n      hash.update(JSON.stringify(chunk.getChildIdsByOrders().prefetch) || \"\");\n    });\n  }\n}\nmodule.exports = JsonpChunkTemplatePlugin;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}