{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass Semaphore {\n  /**\n   * Creates an instance of Semaphore.\n   *\n   * @param {number} available the amount available number of \"tasks\"\n   * in the Semaphore\n   */\n  constructor(available) {\n    this.available = available;\n    /** @type {(function(): void)[]} */\n    this.waiters = [];\n    /** @private */\n    this._continue = this._continue.bind(this);\n  }\n\n  /**\n   * @param {function(): void} callback function block to capture and run\n   * @returns {void}\n   */\n  acquire(callback) {\n    if (this.available > 0) {\n      this.available--;\n      callback();\n    } else {\n      this.waiters.push(callback);\n    }\n  }\n  release() {\n    this.available++;\n    if (this.waiters.length > 0) {\n      process.nextTick(this._continue);\n    }\n  }\n  _continue() {\n    if (this.available > 0) {\n      if (this.waiters.length > 0) {\n        this.available--;\n        const callback = this.waiters.pop();\n        callback();\n      }\n    }\n  }\n}\nmodule.exports = Semaphore;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}