{"ast":null,"code":"'use strict';\n\nconst path = require('path');\nconst locatePath = require('locate-path');\nmodule.exports = function (filename) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const startDir = path.resolve(opts.cwd || '');\n  const _path$parse = path.parse(startDir),\n    root = _path$parse.root;\n  const filenames = [].concat(filename);\n  return new Promise(resolve => {\n    (function find(dir) {\n      locatePath(filenames, {\n        cwd: dir\n      }).then(file => {\n        if (file) {\n          resolve(path.join(dir, file));\n        } else if (dir === root) {\n          resolve(null);\n        } else {\n          find(path.dirname(dir));\n        }\n      });\n    })(startDir);\n  });\n};\nmodule.exports.sync = function (filename) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let dir = path.resolve(opts.cwd || '');\n  const _path$parse2 = path.parse(dir),\n    root = _path$parse2.root;\n  const filenames = [].concat(filename);\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const file = locatePath.sync(filenames, {\n      cwd: dir\n    });\n    if (file) {\n      return path.join(dir, file);\n    }\n    if (dir === root) {\n      return null;\n    }\n    dir = path.dirname(dir);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}