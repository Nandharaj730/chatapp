{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction getCacheId(request, withContext) {\n  return JSON.stringify({\n    context: withContext ? request.context : \"\",\n    path: request.path,\n    query: request.query,\n    request: request.request\n  });\n}\nmodule.exports = class UnsafeCachePlugin {\n  constructor(source, filterPredicate, cache, withContext, target) {\n    this.source = source;\n    this.filterPredicate = filterPredicate;\n    this.withContext = withContext;\n    this.cache = cache || {};\n    this.target = target;\n  }\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"UnsafeCachePlugin\", (request, resolveContext, callback) => {\n      if (!this.filterPredicate(request)) return callback();\n      const cacheId = getCacheId(request, this.withContext);\n      const cacheEntry = this.cache[cacheId];\n      if (cacheEntry) {\n        return callback(null, cacheEntry);\n      }\n      resolver.doResolve(target, request, null, resolveContext, (err, result) => {\n        if (err) return callback(err);\n        if (result) return callback(null, this.cache[cacheId] = result);\n        callback();\n      });\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}